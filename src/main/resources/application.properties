spring.datasource.url = jdbc:mysql://localhost:3306/course_app?useSSL=false
spring.datasource.username =root
spring.datasource.password =root
 
  # Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

  # Show or not log for each sql query
spring.jpa.show-sql = true

  # Hibernate ddl auto (create, create-drop, update)
  #spring.jpa.hibernate.ddl-auto = create

  # Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

  # Use spring.jpa.properties.* for Hibernate native properties (the prefix is
  # stripped before adding them to the entity manager)

  # The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

  ## Root logger option
  #log4j.rootLogger=DEBUG
  #
  #log4j.logger.com.pi=DEBUG,file,stdout
  #
  ## Direct log messages to stdout
  #log4j.appender.stdout=org.apache.log4j.ConsoleAppender
  #log4j.appender.stdout.Target=System.out
  #log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
  #log4j.appender.stdout.layout.ConversionPattern=%d{dd MMM yyyy HH:mm:ss,SSS} %5p %C:%L - %m%n
  #
  # Direct log messages to a log file
log4j.appender.file=org.apache.log4j.RollingFileAppender
log4j.appender.file.File=${log4j.appender.file.File}
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{dd MMM yyyy HH:mm:ss,SSS} %5p %C:%L - %m%n
log4j.appender.file.MaxFileSize=10MB
log4j.appender.file.MaxBackupIndex=10
log4j.appender.file.append=true
management.endpoints.web.exposure.include=*